name: Build, test with SonarCloud and Deploy

on:
  push:
    branches:
      - main
jobs:
  sonarcloud:
    name: Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # 
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ObligatorioArbeloRodriguez_BE-Products
      - name: Análisis de SonarCloud Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=ObligatorioArbeloRodriguez_BE-Products" | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "Quality Gate falló."
            exit 1
          fi
          echo "El quality gate fue pasado con éxito"
  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: Download Dockerfile from Principal repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3.raw" \
               -o Dockerfile \
               https://api.github.com/repos/ObligatorioArbeloRodriguez/Principal/contents/Dockerfile
